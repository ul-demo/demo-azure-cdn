name: Build

on:
  push:
    branches: ["main", "develop", "features/*", "bugfix/*"]
  pull_request:
    branches: [main, "develop"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Pour avoir accès à des variables plus simples comme GITHUB_REF_SLUG_URL
      - name: GitHub Slug Action
        uses: rlespinasse/github-slug-action@3.1.0

      - name: Set variables
        run: |
          if [[ "${GITHUB_REF_SLUG}" == main ]]; then
            echo "DESTINATION_FOLDER=/" >> $GITHUB_ENV
            echo "CONNECTION_STRING=${{ secrets.APP_ST_CONNECTION_STRING }}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF_SLUG}" == develop ]]; then
            echo "DESTINATION_FOLDER=/" >> $GITHUB_ENV
            echo "CONNECTION_STRING=${{ secrets.DEV_ST_CONNECTION_STRING }}" >> $GITHUB_ENV
          else
            echo "DESTINATION_FOLDER=/${GITHUB_REF_SLUG}" >> $GITHUB_ENV
            echo "CONNECTION_STRING=${{ secrets.DEV_ST_CONNECTION_STRING }}" >> $GITHUB_ENV
          fi

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Restore node_modules from cache
        id: restoreNodeModules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package*.json') }}

      - name: Run npm ci
        if: steps.restoreNodeModules.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline &> /dev/null

      - name: Run eslint
        run: npm run eslint

      - name: Run build
        # On conserve le hash du commit dans un fichier pour être capable de lier le build au commit
        run: |
          npm run build
          echo ${{ github.sha }} > dist/commit

      - name: Run unit tests
        run: npm run test:unit

      - name: Package build
        run: mkdir target && tar -cvzf target/package.tgz dist

      - name: Upload current build
        uses: fixpoint/azblob-upload-artifact@v4
        with:
          connection-string: ${{ secrets.APP_ST_CONNECTION_STRING }}
          container: artifacts
          name: ${{ env.GITHUB_REF_SLUG_URL }}
          path: target
          cleanup: true

      - name: Deploy application
        uses: ulaval/azure-blob-copy-action@main
        with:
          action: upload
          connection_string: ${{ env.CONNECTION_STRING }}
          container_name: $web
          blob_directory: ${{ env.DESTINATION_FOLDER }}
          local_directory: dist
          http_headers: |
            - glob: "**/*.????????.*"
              headers:
                Cache-Control: public, max-age=604800, immutable

            - glob: "**/*"
              headers:
                Cache-Control: public, max-age=120, s-maxage=180, proxy-revalidate

      - name: Publish test reports
        uses: ulaval/azure-blob-copy-action@main
        if: ${{ success() || failure() }}
        with:
          action: upload
          connection_string: ${{ secrets.REPORTS_ST_CONNECTION_STRING }}
          container_name: $web
          blob_directory: ${{ github.repository }}/${{ env.GITHUB_REF_SLUG_URL }}
          local_directory: reports
